
library(questionr)
library(dplyr)
library(tidyverse)
library(lsr)
library("rpart")
library("rpart.plot")

library(ggplot2)
library(lattice)
library('caret')
library("lubridate")

j <- read.csv("C:/Users/Alex/Desktop/MBA BIG DATA/Semestre 2/examen R/Base.csv", header=TRUE, stringsAsFactors=FALSE, quote="", encoding="UTF-8", sep=";")


j<-Base

#ENCODAGE DES VARIABLES

j$CA_2017=as.numeric(j$CA_2017)
j$CA_2016=as.numeric(j$CA_2016)
j$vip=as.factor(j$VIP)
j$dev=as.factor(j$dev)
j$MAGASIN=as.factor(j$MAGASIN)

j$DATEDEBUTADHESION<-as.Date(j$DATEDEBUTADHESION,"%d/%m/%Y %H:%M")
j$DATEFINADHESION <- as.Date(j$DATEFINADHESION,"%d/%m/%Y %H:%M")
j$DATENAISSANCE <- as.Date(j$DATENAISSANCE,"%d/%m/%Y %H:%M")
j$DATEREADHESION <- as.Date(j$DATEREADHESION,"%d/%m/%Y %H:%M")

#VARIABLE CIBLE 
#Créons une variable pour identifier les clients ayant plus acheté en 2017 qu'en 2016
j$xx=as.numeric(j$xx) 

j<-j%>%mutate(dev= case_when( CA_2017>CA_2016 ~ "1", TRUE ~ "0"))

#CA 2016#
sum(j$CA_2016)

#10 291 103 

#CA 2017#
sum(j$CA_2017)

#7 454 217


#Comptons le client ayant acheté en 2017 plus qu'en 2016
sum(j$dev=="1")
#8 413

#Comptons le nombre de client qui ont moins acheté en 2016
sum(j$dev=="0")
#21 587

#Intéressons nous aux clients déjà familiers de l'enseigne en 2016
j<-j%>%mutate(new = case_when (CA_2016==0 & CA_2017>0 ~ "new", TRUE~ "old"))
#new   old 
#7    29993


cli_old<-j%>%filter(j$new=="old")%>%select(MAGASIN,IDCLIENT, CA_2017, CA_2016, new, dev, VIP, CIVILITE,xx, age_disc10, nb_diff_MAG_2016)


#Il serait intéressant de connaitre le profil de ces 8 413 clients qui ont acheté plus en 2017 pour cibler vos actions marketings

#Créons une variable pour identifier les clients fideles à 1 seul magasin ( flag = 1 )

cli_old<-cli_old%>%mutate(fidele1mag = case_when(nb_diff_MAG_2016==1~"1", TRUE~"0"))
# fideleà1mag    plusieurs_mag 
# 25540          4453 

# Afin de normaliser nos données, nous crééons des variable pour identifier le profil d'achat des clients : achat unique, shoppeur, à partir de la variable nb_univers_different_2016

profil_achat<- j%>%group_by(j$nb_univers_different_2016)%>%summarize(n(), mean(CA_2016))

# j.nb_univers_different_2016  n.. mean.CA_2016.
#1                                 1 5401      202.5451
#2                                 2 6888      273.3901
#3                                 3 6125      385.1072
#4                                 4 4423      561.8280
#5                                 5 1912      781.2183
#6                                 6  211     1362.7709
#7                                NA 5040      136.7193

cor(j$nb_univers_different_2016, j$CA_2016, use = "complete.obs")
#0,39

#On remarque sans surprise que les clients achetant dans plusieurs univers dépensent plus. 
#Grace à l'analyse des quartiles de cette variable nous pouvons déduire des catégories pertinentes
#Nous avons 3 catégories: achat unique ( 1 à 3 univers), flaneur ( 4, 5 univers) et shopper (6univers)

j<-j%>%mutate(achat_unique = case_when(nb_univers_different_2016==1 |(nb_univers_different_2016==2) | (nb_univers_different_2016==3) ~ "1", TRUE ~ "0"))
j<-j%>%mutate(flaneur = case_when(nb_univers_different_2016==4 |(nb_univers_different_2016==5) ~ "1", TRUE ~ "0"))
j<-j%>%mutate(shopper = case_when(nb_univers_different_2016==6 ~ "1", TRUE ~ "0"))

plot(j$CA_2016, j$h_max_2016)


#Créons des variables pour discrétiser le CA de 2016 et 2017 afin de pouvoir plus facilement l'analyser
#Afin de créer des intervalles nous faisons une boite à moustache 

boxplot(j$CA_2016) 

#Intervalle 0-100, 100-200, 200-400, et + de 400
j<-j%>%mutate(CA_2016_inf100=case_when(j$CA_2016<"100" ~ "1", TRUE~"0"))
j<-j%>%mutate(CA_2016_100200=case_when(j$CA_2016>"100" & j$CA_2016<"200" ~ "1", TRUE~"0"))
j<-j%>%mutate(CA_2016_200400=case_when(j$CA_2016>"200"& j$CA_2016<"400" ~ "1", TRUE~"0"))

j<-j%>%mutate(CA_2016_sup400=case_when(j$CA_2016>"400" ~ "1", TRUE~"0"))
j<-j%>%mutate(CA_2016_seq=case_when(j$CA_2016<"100"~"1", j$CA_2016>"100" & j$CA_2016<"200" ~ "2", j$CA_2016>"200"& j$CA_2016<"400"~"3", j$CA_2016>"400" ~ "4", TRUE~"0"))

#Analysons la corrélation entre le CA et le nb de ticket émis
reg <- lm(j$CA_2016 ~ j$nbtic_2016, data = j)
summary(reg)
plot(j$nbtic_2016, j$CA_2016,ylab = "CA 2016", xlab = "nombre de ticket")
abline(reg, col = "red")

plot(j$CA_2016_seq, j$nbtic_2016)
cor(j$CA_2016, j$nbtic_2016, use = "complete.obs")
#0,69
cor(j$CA_2017, j$nbtic_2017, use = "complete.obs")
#0,76

#la correlation entre le nombre de ticket soit la fréquentation client et le chiffre d'affaire par client
#est encore plus importante en 2017.


#Quels sont les univers fréquentés par les clients à potentiel ? 
j$dev=as.numeric(j$dev)
reg3 <- lm(j$dev ~ j$part_nb_univers_2016_U0_QL, data = j)
summary(reg3)

#peu de lien entre les clients à fort potentiel et l'univers UO

j$dev=as.numeric(j$dev)
reg4 <- lm(j$dev ~ j$part_nb_univers_2016_U1_QL, data = j)
summary(reg4)

#Quand la part des achats dans l'univers U1 est comprise entre 0 et 0,4, le poids de cette variable est 0,13
#Cet univers semble faire partie des univers importants pour nos clients cible
j$dev=as.numeric(j$dev)
reg5 <- lm(j$dev ~ j$part_nb_univers_2016_U2_QL, data = j)
summary(reg5)

#très peu de correlation avec la part des achats dans U2

j$dev=as.numeric(j$dev)
reg6 <- lm(j$dev ~ j$part_nb_univers_2016_U3_QL, data = j)
summary(reg6)

j$dev=as.numeric(j$dev)
reg7 <- lm(j$dev ~ j$part_nb_univers_2016_U4_QL, data = j)
summary(reg7)



#Etude panier moyen
j$prix_ticket_moy_2016=as.numeric(j$prix_ticket_moy_2016)

mean(j$prix_ticket_moy_2016)

#73.83022€

#analyse de l'age
j$age_an=as.numeric(j$age_an)

j$age_disc10=as.numeric(j$age_disc10)
cor(j$CA_2016, j$age_an,use = "complete.obs")
hist(j$age_an, col = "grey", border = "white",
     main = paste("Ages des ", nrow(j), "clients"),
     xlab = "Age[annees]", ylab = "Effectifs",
     xlim = c(20,90),
     labels = TRUE)

#Magasin fortement représenté ds la base
# #HEI 836
# BEA 813
# CLA 852
# SEY 934
# VIB 852

#age/CA
plot(j$CA_2016, j$age_an)
plot(j$CA_2016, j$age_an, pch = 20, col = rgb(0,0,0,0.1))

# Heure moy d'achat/ CA'
plot(j$CA_2016, j$h_mean_2016)
plot(j$CA_2016, j$h_mean_2016, pch = 20, col = rgb(0,0,0,0.1))



#Repartition année d'adhésion
barplot(prop.table(table(j$DATEDEBADH_mois)))

#Les adhésions sont plus importantes de mars à mai, on observce une forte saisonalité.
barplot(prop.table(table(j$DATEDEBADH_an)))


j=as.numeric(j)

j2<-j%>%select(nbtic_2016,part_nb_univers_2016_U1_QL, flaneur, new, nb_mois_diff_2016, nb_diff_MAG_2016_QL, prix_ticket_moy_2016_QL,part_nb_univers_2016_U1_QL, MAGASIN, VIP, CA_2016_inf100, CA_2016_100200, CA_2016_200400, CA_2016_sup400,DATEDEBADH_mois, prix_ticket_moy_2016, shopper, achat_unique, age_QL, dev, h_mean_2016_QL, DATEDEBADH_mois)
j2$dev=as.vector(j2$dev)



# #Analyse des variables Age, %montant univers ##
e <- read.csv("C:/Users/Alex/Desktop/MBA BIG DATA/Semestre 2/examen R/Base.csv", header=TRUE, stringsAsFactors=FALSE, quote="", encoding="UTF-8", sep=";")
# TRAVAIL LA MEME BASE MAIS NOMMEE e

# ===== Analyse bivariée =====
#Age/CA
plot(e$CA_2016, e$age_an)
plot(e$CA_2016, e$age_an, pch = 20, col = rgb(1,0,0,0.1))


# Heure moy d'achat/ CA
plot(e$CA_2016, e$h_mean_2016)
plot(e$CA_2016, e$h_mean_2016, pch = 20, col = rgb(1,0,0,0.1))

# CA/ nbre de ticket
plot(e$CA_2016, e$nbtic_2016)
plot(e$CA_2016, e$nbtic2016, pch = 20, col = rgb(1,0,0,0.1))


#nbre de ticket vs CA en 2016
plot(e$nbtic_2016, e$CA_2016)
plot(e$nbtic_2016, e$CA_2016, pch = 20, col = rgb(1,0,0,0.1))
cor(e$nbtic_2016, e$CA_2016)

reg <- lm(nbtic_2016 ~ CA_2016, data =e)
summary(reg)

plot(e$CA_2016, e$nbtic_2016, ylab = "Nombre de tickets", xlab = "CA 2016")
abline(reg, col = "red")

#nbre de ticket vs CA en 2017


plot(e$nbtic_2017, e$CA_2017)
plot(e$nbtic_2017, e$CA_2017, pch = 20, col = rgb(1,0,0,0.1))
cor(e$nbtic_2017, e$CA_2017)

reg <- lm(nbtic_2016 ~ CA_2016, data =e)
summary(reg)

plot(e$CA_2017, e$nbtic_2017, ylab = "Nombre de tickets", xlab = "CA 2017")
abline(reg, col = "red")


#Création de la variable pour identifier les clients ayant plus acheté en 2017 qu'en 2016
library(dplyr)
library(tidyverse)
str(e)


#Creation de J2 pour selectionner nos variables à

j2<-e%>%select(nbtic_2016, flaneur, new, nb_mois_diff_2016, MAGASIN, VIP, DATEDEBADH_mois, prix_ticket_moy_2016, shopper, achat_unique, age_QL, dev, h_mean_2016_QL)
j2$dev=as.vector(j2$dev)
liste_variable = c("nbtic_2016", "flaneur", "new", "MAGASIN", "VIP", "CA_2016_inf100", "CA_2016_100200", "CA_2016_200400", "CA_2016_sup400", "DATEDEBADH_mois", "prix_ticket_moy_2016", "shopper", "achat_unique", "age_QL", "dev", "h_mean_2016_QL")


# Regression logistique recherche


## convertir char en factor
e$flaneur <- as.factor((e$flaneur))
e$dev <- as.factor((e$dev))
e$h_mean_2016_QL <- as.factor((e$h_mean_2016_QL))
e$MAGASIN <- as.factor((e$MAGASIN))
e$achat_unique <- as.factor((e$achat_unique))
e$shopper <- as.factor((e$shopper))
e$age_QL <- as.factor((e$age_QL))
e$prix_ticket_moy_2016 <- as.integer((e$prix_ticket_moy_2016))

# creation de la formule
formule <- y ~ flaneur + nbtic_2016 +   nb_mois_diff_2016 +  VIP + DATEDEBADH_mois + prix_ticket_moy_2016 + shopper + achat_unique + age_QL + dev + h_mean_2016_QL
# creation de la table à analyser
liste_var = c("flaneur", "nbtic_2016", "nb_mois_diff_2016", "VIP", "DATEDEBADH_mois", "prix_ticket_moy_2016", "shopper", "achat_unique", "age_QL", "dev", "h_mean_2016_QL")


table_a = e[,liste_var]

# Logique d'AIC
str(train)

# echantillon d'apprentissage et validation (350 lignes)

cles <- read.csv("C:/Users/Alex/Desktop/MBA BIG DATA/Semestre 2/examen R/cles2.csv", quote="", header=TRUE, encoding="UTF-8", sep=";")

train <- table_a[cles$test,]
valid <- table_a[-cles$test,]

# recherche du meilleur modÃ¨le avec la glm et step
logit <- glm(dev~1, data=train,family=binomial(link = "logit"))
summary(logit)



selection <- step(logit,direction="forward",trace=TRUE,k = log(nrow(train)), scope=list(upper=formule))


# recherche moins restrictive
selection <- step(logit,direction="forward",trace=TRUE,k=2, scope=list(upper=formule))

summary(selection)

train$ascaic <- predict(selection, newdata=train, type="response")
valid$ascaic <- predict(selection, newdata=valid, type="response")

#Calcul de l'AUC

pred <- prediction(train$ascaic,train$dev,label.ordering=c(0,1))
performance(pred,"auc")@y.values[[1]]
# => 0.7247854
pred <- prediction(valid$ascaic,valid$dev,label.ordering=c(0,1))
performance(pred,"auc")@y.values[[1]]
# => 0.7397711

# => meilleur modele
summary(selection)
# => AIC: 400.05

#V de cramer
liste_variable = c("nbtic_2016", "flaneur", "new", "nb_mois_diff_2016","nb_diff_MAG_2016_QL","prix_ticket_moy_2016_QL", "part_nb_univers_2016_U1_QL","MAGASIN", "VIP", "CA_2016_inf100", "CA_2016_100200", "CA_2016_200400", "CA_2016_sup400", "DATEDEBADH_mois", "prix_ticket_moy_2016", "shopper", "achat_unique", "age_QL", "dev", "h_mean_2016_QL")

t2 <- j2[,liste_variable]
t2=as.data.frame(t2)

# calcul du V de Cramer :
# utilisation de la formule : ici, racine carrée de (chi2 / effectif)
cramer  <- matrix(NA,ncol(t2),3)
for (i in (1:ncol(t2)))
{     cramer[i,1] <- names(t2[i])
cramer[i,2] <- sqrt(chisq.test(table(t2[,i],j2$dev))$statistic/
                      (length(t2[,i])))
cramer[i,3] <- chisq.test(table(t2[,i],j2$dev))$p.value
}

colnames(cramer) <- c("variable","V de Cramer","p-value chi2")

vcramer <- cramer [order(cramer[,2], decreasing=T),]
vcramer

par(mar = c(8, 4, 4, 0))
barplot(as.numeric(vcramer[,2]),col=gray(0:nrow(vcramer)/nrow(vcramer)),
        names.arg=vcramer[,1], ylab='V de Cramer', ylim=c(0,0.5),cex.names = 0.8, las=3)
abline(h=0.1, lty=2)
abline(h=0.2, lty=2)

t2$dev=as.numeric(t2$dev)
t2$DATEDEBADH_mois=as.factor(t2$DATEDEBADH_mois)
t2$MAGASIN=as.factor(t2$MAGASIN)


#ARBRE DE DECISION 

#Calcul d'un arbre
t2$p <- sample(1:30000, nrow(t2) , replace = TRUE) # Avec remise
constr <- t2 %>% dplyr::filter(p <= 1000) %>% dplyr::select(-p)
valid <- t2 %>% dplyr::filter(p > 1000) %>% dplyr::select(-p)

arbre <- rpart(dev ~ prix_ticket_moy_2016_QL + VIP + h_mean_2016_QL+flaneur ,
               data=constr , method = "class" ,parms = list(split = "gini"), control=rpart.control( minsplit = 2, cp = 0.01))
rpart.plot(arbre)

summary(arbre)

#Améliorons l'affichage de l'arbre

prp(arbre,type=2,extra=1, split.box.col="lightgray")


# Calculez la matrice de confusion
prediction <- predict(arbre,valid,type="class")
table(prediction,valid$dev)
table(valid$dev)
table(prediction)

#Definissons le cp optimal en élaguant l'arbre
printcp(arbre)
arbre_elagué <- prune(arbre,cp=0.003861)
arbre_elagué
rpart.plot(arbre_elagué)
summary(arbre_elagué)
#Matrice de confusion pour la 2nd matrice
prediction2 <- predict(arbre_elagué,valid,type="class")
table(prediction2,valid$dev)
table(valid$dev)
table(prediction2)


# Mesure du pouvoir discriminant de l'arbre élagué 
t2$CART9f <- predict(arbre_elagué,type="prob",t2)
head(t2["CART9f"],5)

# aire sous la courbe ROC pour l'arbre à 9 feuilles
install.packages("ROCR")
library(ROCR)
pred <- prediction(t2$CART9f[,2],t2$dev,label.ordering=c(0,1))
auc <- performance(pred,"auc")
performance(pred,"auc")@y.values[[1]]

#0,61 AUC

library(ROCR)
set.seed(235)
auc <- matrix(NA,nrow(arbre$cptable)-1,4)
for(i in 2:nrow(arbre$cptable))
{
        cartp <- prune(arbre,cp=arbre$cptable[i,"CP"])
        predc <- predict(cartp,type="prob",t2)[,2]
        pred <- prediction(predc,t2$dev,label.ordering=c(0,1))
        auc[i-1,1] <- arbre$cptable[i,"CP"]
        auc[i-1,2] <- arbre$cptable[i,"nsplit"]+1
        auc[i-1,3] <- arbre$cptable[i,"xerror"]
        auc[i-1,4] <- performance(pred,"auc")@y.values[[1]]
} # fin de la boucle
colnames(auc) <- c("CP","nfeuilles","erreur","AUC")
auc

#0,57 AUC


